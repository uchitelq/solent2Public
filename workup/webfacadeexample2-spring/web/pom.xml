<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    
    <parent>
        <groupId>solent.ac.uk.ood.examples</groupId>
        <artifactId>webfacadeexample2</artifactId>
        <version>1.3-SNAPSHOT</version>
    </parent>

    <artifactId>webfacadeexample2-web</artifactId>
    <name>webfacadeexample2-web</name>
        
    <packaging>war</packaging>
    
    <properties>
       
        <!-- You can copy and paste the single properties, into the pom.xml file and the Netbeans will pick them up. -->
        <org-netbeans-modules-maven-j2ee.netbeans_2e_hint_2e_j2eeVersion>1.6-web</org-netbeans-modules-maven-j2ee.netbeans_2e_hint_2e_j2eeVersion>
        <org-netbeans-modules-maven-j2ee.netbeans_2e_hint_2e_deploy_2e_server>Tomcat</org-netbeans-modules-maven-j2ee.netbeans_2e_hint_2e_deploy_2e_server>
    </properties>

    <dependencies>

        <dependency>
            <groupId>solent.ac.uk.ood.examples</groupId>
            <artifactId>webfacadeexample2-model</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>solent.ac.uk.ood.examples</groupId>
            <artifactId>webfacadeexample2-dao-jpa</artifactId>
            <version>${project.version}</version>
        </dependency>
        
        <dependency>
            <groupId>solent.ac.uk.ood.examples</groupId>
            <artifactId>webfacadeexample2-service</artifactId>
            <version>${project.version}</version>
        </dependency>
            
        <!-- spring dependencies -->
        <!-- Spring dependencies -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <scope>compile</scope>
        </dependency> 
            
        <!--Spring MVC framework--> 
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <scope>compile</scope>
        </dependency>

        <!-- to allow jersey to work with spring as a component -->
        <!-- note if not present need to have jersey-hk2 on classpath -->
        <dependency>
            <groupId>org.glassfish.jersey.ext</groupId>
            <artifactId>jersey-spring5</artifactId>
            <scope>compile</scope>
            <exclusions>
                <!-- even when excluded and down version this is a problem - need later version of tomcat -->
                <!--excluding jakarta.ws.rs-api 2.1.6 as doenst work with tomcat--> 
                <!--                <exclusion>   
                    <groupId>jakarta.ws.rs</groupId>
                    <artifactId>jakarta.ws.rs-api</artifactId>
                </exclusion>-->
            </exclusions> 
        </dependency>

        <!-- https://mvnrepository.com/artifact/jakarta.ws.rs/jakarta.ws.rs-api -->
        <!--        <dependency>
            <groupId>jakarta.ws.rs</groupId>
            <artifactId>jakarta.ws.rs-api</artifactId>
            <version>2.1.5</version>
        </dependency>-->

            
            
        <!-- servelet dependencies provided by tomcat -->
        <dependency>
            <groupId>javax.servlet.jsp</groupId>
            <artifactId>jsp-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- java server tag library -->
        <dependency>
            <groupId>jstl</groupId>
            <artifactId>jstl</artifactId>
            <version>1.2</version>
        </dependency>
        
        
        <dependency>
            <groupId>org.glassfish.jersey.containers</groupId>
            <artifactId>jersey-container-servlet-core</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.containers</groupId>
            <artifactId>jersey-container-servlet</artifactId>
            <scope>compile</scope>
        </dependency>
        <!-- this library allows jaxb classes to be treated as json -->
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-json-jackson</artifactId>
            <scope>compile</scope>
        </dependency>
        
        <!-- logging dependencies to be included in war so scope compile-->
        <!-- jcl over slf4j -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <scope>compile</scope>
        </dependency>
        
        <!-- SLF4J over Log4j needed for jpa-->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
            <scope>compile</scope>
        </dependency>
        
        <!-- Log4j API and Core implementation  -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <scope>compile</scope>
        </dependency>
        <!-- Log4j web required to run in a servelet context  -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-web</artifactId>
            <scope>compile</scope>
        </dependency>
        
    </dependencies>

    <build>
        <plugins>
      
            <plugin>
          
                <!-- run embedded tomcat with mvn org.codehaus.cargo:cargo-maven2-plugin:run -->
                <!-- see https://stackoverflow.com/questions/41326911/maven-plugin-for-tomcat-9 -->
                <groupId>org.codehaus.cargo</groupId>
                <artifactId>cargo-maven2-plugin</artifactId>
                <version>1.7.6</version>
                <configuration>
                    <container>
                        <containerId>tomcat8x</containerId>
                        <type>embedded</type>
                    </container>
                </configuration>
            </plugin>
      
        </plugins>
    </build>
</project>
